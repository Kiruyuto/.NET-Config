name: "Release Please"

on:
  push:
    branches: ["master"]

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  release-please:
    name: "Release-Please"
    runs-on: ["ubuntu-latest"]
    outputs:
      releases_created: ${{ steps.run-release-please.outputs.releases_created }}
      tag_name: ${{ steps.run-release-please.outputs.tag_name }}
      version: ${{ steps.run-release-please.outputs.version }}
    steps:
      - name: "Generate App Token"
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: generate-token
        with:
          app-id: ${{ secrets.DEV_APP_ID }}
          private-key: ${{ secrets.DEV_APP_PRIVATE_KEY }}
      - name: "Run release-please"
        uses: googleapis/release-please-action@c2a5a2bd6a758a0937f1ddb1e8950609867ed15c # v4.3.0
        id: run-release-please
        with:
          token: ${{ steps.generate-token.outputs.token }}
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json
      - name: "Echo json"
        run: echo "$OUTPUTS"
        shell: bash
        env:
          OUTPUTS: ${{ toJSON(steps.run-release-please.outputs) }}

  release-config:
    name: "Release: Config"
    runs-on: ["windows-latest"]
    needs: "release-please"
    if: ${{ needs.release-please.outputs.releases_created == 'true' }}
    timeout-minutes: 20
    env:
      PackageName: "Kiruyuto.DotNet.Config.${{ needs.release-please.outputs.version }}.nupkg"
    permissions: write-all
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: "Setup .NET"
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5.0.0
        with:
          dotnet-version: 9.0.306
      - uses: nuget/setup-nuget@323ab0502cd38fdc493335025a96c8fdb0edc71f # v2.0.1
        with:
          nuget-version: "latest"
      - name: "Pack"
        run: nuget pack Kiruyuto.DotNet.Config.nuspec -ForceEnglishOutput -OutputDirectory outputFiles -Version ${{ needs.release-please.outputs.version }}
      - name: "Push to NuGet"
        run: dotnet nuget push ./outputFiles/${{ env.PackageName }} --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{ secrets.NUGET_KEY }}
      - name: "Add GitHub Packages source and push"
        run: |
          dotnet nuget add source --username ${{ github.actor || github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name GitHub "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          dotnet nuget push ./outputFiles/${{ env.PackageName }} --source 'GitHub' --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
